#summary Explains how to use depend_guard.

= Introduction =

*Depend Guard* is a tool made for automatic dependency check on a big project with many _new_ developpers. Architects can congeal a part of their dependency design and forbid dependencies between modules. Any unwanted dependency will produce an error with the incriminated include.

= Command line parameters =

{{{Usage: depend_guard --dependencies=input.xml --graph=graph.xml}}}

 * *help*(-h): produce help message
 * *version*(-v): produce version message
 * *dependencies*: set input xml file for dependency guard check
 * *graph*: set graph input file (from [UsingDepend depend]) for guard analysis

Example of dependency XML input:
{{{
<dependencies>
    <module name='depend_app'>
        <dependency>depend</dependency>
    </module>
    <module name='depend_guard_app'>
        <dependency>depend</dependency>
    </module>
    <module name='depend_metrics_app'>
        <dependency>depend</dependency>
    </module>
    <module name='depend_components_app'>
        <dependency>depend</dependency>
    </module>
    <module name='depend_graph_app'>
        <dependency>depend</dependency>
    </module>
</dependencies>
}}}

= Dependency checking =

There are four cases when checking dependencies:

 # The dependency from a source module to a target module is defined in the xml, the dependency is checked and nothing append
{{{
<dependencies>
    <module name='source'>
        <dependency>target</dependency>
    </module>
</dependencies>
}}}
 # A dependency is declared in the XML but not checked during code analysis. A warning is produced.